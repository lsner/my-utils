/*
* 希尔排序（减少增量） [8, 9, 1, 7, 2, 3, 5, 4, 6, 0]
*
* 规律：第一个增量=数组的长度/2,
       第二个增量= 第一个增量/2,
       第三个增量=第二个增量/2,
       以此类推，最后一个增量=1。
*
* 1、缩小增量以 gap = gap/2 的方式  初始增量为 gap = 10/2 = 5，整个数组分成了 5 组 [ 8, 3] [ 9, 5] [1, 4] [7, 6] [2, 0 ]
  2、使用插入排序将每组中小的元素放在前面 [3, 8] [ 5, 9] [1, 4] [6, 7] [0, 2]
  3、缩小增量 gap = 5/2 = 2，整个数组分成了 2 组 [3, 5, 1, 6, 0, 8, 9, 4, 7, 2] => [3, 1, 0, 9, 7] [5, 6, 8, 4, 2]
  4、使用插入排序将每组中小的元素放在前面 [0, 1, 3, 7, 9] [2, 4, 5, 6, 8]
  5、再缩小增量 gap = 2/2 = 1，整个数组分成了 1 组 =>  [0, 2 , 1 , 4 , 3 , 5 , 7 , 6 , 9 , 8]
  6、再继续使用插入排序  => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
*

总结：上面的分析可忽略 归根到底：分组->插入排序->分组->插入排序。。。。
* */


function DI(arr) {
    var gap = arr.length >> 1
    for (gap; gap >= 1; gap >>= 1) {   //gap增量递减  gap >>= 1; means gap = gap >> 1;
        for (var i = gap; i < arr.length; i++) {
            //进行插入排序
            var temp = arr[i] 
            var flag = i
            while (arr[ flag - 1] > temp) {
                arr[flag] = arr[flag - 1]
                flag--
            }
            arr[flag] = temp
        }
    }
    console.log(arr)
}

DI([8, 9, 1, 7, 2, 3, 5, 4, 6, 0])